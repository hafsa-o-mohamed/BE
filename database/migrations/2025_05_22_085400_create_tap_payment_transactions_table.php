<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('tap_payment_transactions', function (Blueprint $table) {
            $table->id();
            $table->string('transaction_id')->unique()->comment('Unique transaction ID generated by our system');
            $table->string('charge_id')->nullable()->comment('Charge ID returned by Tap Payments');
            $table->string('token_id')->nullable()->comment('Token ID returned by Tap Payments');
            $table->string('payment_agreement_id')->nullable()->comment('Payment agreement ID for recurring payments');
            $table->decimal('amount', 10, 3)->comment('Transaction amount');
            $table->string('currency', 3)->default('KWD')->comment('Transaction currency');
            $table->string('status')->default('pending')->comment('Transaction status: pending, completed, failed, etc.');
            $table->string('payment_method')->nullable()->comment('Payment method: APPLEPAY, CARD, etc.');
            $table->string('payment_type')->nullable()->comment('Payment type: CREDIT, DEBIT, etc.');
            $table->string('card_brand')->nullable()->comment('Card brand: VISA, MASTERCARD, etc.');
            $table->string('card_last_four')->nullable()->comment('Last four digits of the card');
            $table->string('card_first_six')->nullable()->comment('First six digits of the card');
            $table->foreignId('user_id')->nullable()->constrained()->comment('User who made the payment');
            $table->json('request_data')->nullable()->comment('Full request data sent to Tap Payments');
            $table->json('response_data')->nullable()->comment('Full response data received from Tap Payments');
            $table->text('error_message')->nullable()->comment('Error message if transaction failed');
            $table->string('idempotency_key')->nullable()->unique()->comment('Idempotency key for replay protection');
            $table->string('ip_address')->nullable()->comment('IP address of the client');
            $table->string('user_agent')->nullable()->comment('User agent of the client');
            $table->boolean('is_live')->default(false)->comment('Whether the transaction was processed in live mode');
            $table->timestamps();
            
            // Index for faster lookups
            $table->index(['user_id', 'status']);
            $table->index(['transaction_id', 'charge_id']);
            $table->index('created_at');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('tap_payment_transactions');
    }
};
